<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE log SYSTEM "logger.dtd">
<log>
</log>
<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE log SYSTEM "logger.dtd">
<log>
<record>
  <date>2023-03-16T20:09:26.366586300Z</date>
  <millis>1678997366366</millis>
  <nanos>586300</nanos>
  <sequence>0</sequence>
  <logger>com.example.demo</logger>
  <level>INFO</level>
  <class>com.example.demo.MainPageTest</class>
  <method>ensureThatEndpoint2Returns200</method>
  <thread>1</thread>
  <message>Request Successful!</message>
</record>
</log>
<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE log SYSTEM "logger.dtd">
<log>
<record>
  <date>2023-03-16T20:10:06.118545400Z</date>
  <millis>1678997406118</millis>
  <nanos>545400</nanos>
  <sequence>0</sequence>
  <logger>com.example.demo</logger>
  <level>INFO</level>
  <class>com.example.demo.MainPageTest</class>
  <method>ensureThatEndpoint2Returns200</method>
  <thread>1</thread>
  <message>Request Successful!
Request body: {
  "apiVersion" : "0.0.1-SNAPSHOT",
  "swaggerVersion" : "1.2",
  "apis" : [ {
    "path" : "/datacapture_combo.{format}",
    "description" : "REST Service to submit/stop/monitor data capture combo jobs"
  }, {
    "path" : "/datacapture.{format}",
    "description" : "REST Service to submit/stop/monitor data capture jobs"
  }, {
    "path" : "/datacapture_combo_schedule.{format}",
    "description" : "REST Service to submit/stop/monitor scheduled data capture combo jobs"
  }, {
    "path" : "/dataproviders.{format}",
    "description" : "REST Service to get supported data providers"
  }, {
    "path" : "/datacapture_schedule.{format}",
    "description" : "REST Service to submit/stop/monitor scheduled data capture jobs"
  }, {
    "path" : "/test.{format}",
    "description" : "REST Service to test that the services are running"
  } ],
  "basePath" : "/resources"
}</message>
</record>
</log>
<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE log SYSTEM "logger.dtd">
<log>
<record>
  <date>2023-03-16T20:10:37.626903800Z</date>
  <millis>1678997437626</millis>
  <nanos>903800</nanos>
  <sequence>0</sequence>
  <logger>com.example.demo</logger>
  <level>INFO</level>
  <class>com.example.demo.MainPageTest</class>
  <method>ensureThatEndpoint2Returns200</method>
  <thread>1</thread>
  <message>Request Successful!
Request body: {
  "apiVersion" : "0.0.1-SNAPSHOT",
  "swaggerVersion" : "1.2",
  "apis" : [ {
    "path" : "/datacapture_combo.{format}",
    "description" : "REST Service to submit/stop/monitor data capture combo jobs"
  }, {
    "path" : "/datacapture.{format}",
    "description" : "REST Service to submit/stop/monitor data capture jobs"
  }, {
    "path" : "/datacapture_combo_schedule.{format}",
    "description" : "REST Service to submit/stop/monitor scheduled data capture combo jobs"
  }, {
    "path" : "/dataproviders.{format}",
    "description" : "REST Service to get supported data providers"
  }, {
    "path" : "/datacapture_schedule.{format}",
    "description" : "REST Service to submit/stop/monitor scheduled data capture jobs"
  }, {
    "path" : "/test.{format}",
    "description" : "REST Service to test that the services are running"
  } ],
  "basePath" : "/resources"
}</message>
</record>
</log>
<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE log SYSTEM "logger.dtd">
<log>
<record>
  <date>2023-03-16T20:10:46.707262100Z</date>
  <millis>1678997446707</millis>
  <nanos>262100</nanos>
  <sequence>0</sequence>
  <logger>com.example.demo</logger>
  <level>INFO</level>
  <class>com.example.demo.MainPageTest</class>
  <method>ensureThatEndpoint2Returns200</method>
  <thread>1</thread>
  <message>Request Successful!
Request body: {
  "apiVersion" : "0.0.1-SNAPSHOT",
  "swaggerVersion" : "1.2",
  "apis" : [ {
    "path" : "/datacapture_combo.{format}",
    "description" : "REST Service to submit/stop/monitor data capture combo jobs"
  }, {
    "path" : "/datacapture.{format}",
    "description" : "REST Service to submit/stop/monitor data capture jobs"
  }, {
    "path" : "/datacapture_combo_schedule.{format}",
    "description" : "REST Service to submit/stop/monitor scheduled data capture combo jobs"
  }, {
    "path" : "/dataproviders.{format}",
    "description" : "REST Service to get supported data providers"
  }, {
    "path" : "/datacapture_schedule.{format}",
    "description" : "REST Service to submit/stop/monitor scheduled data capture jobs"
  }, {
    "path" : "/test.{format}",
    "description" : "REST Service to test that the services are running"
  } ],
  "basePath" : "/resources"
}</message>
</record>
<record>
  <date>2023-03-16T20:10:56.837732600Z</date>
  <millis>1678997456837</millis>
  <nanos>732600</nanos>
  <sequence>1</sequence>
  <logger>com.example.demo</logger>
  <level>SEVERE</level>
  <class>com.example.demo.MainPageTest</class>
  <method>ensureThatEndpointReturns200</method>
  <thread>1</thread>
  <message>Request Timed Out!</message>
</record>
</log>
<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE log SYSTEM "logger.dtd">
<log>
<record>
  <date>2023-03-17T04:48:20.917438900Z</date>
  <millis>1679028500917</millis>
  <nanos>438900</nanos>
  <sequence>0</sequence>
  <logger>com.example.demo</logger>
  <level>INFO</level>
  <class>com.example.demo.MainPageTest</class>
  <method>ensureThatEndpoint2Returns200</method>
  <thread>1</thread>
  <message>Request Successful!
Request body: {
  "apiVersion" : "0.0.1-SNAPSHOT",
  "swaggerVersion" : "1.2",
  "apis" : [ {
    "path" : "/datacapture_combo.{format}",
    "description" : "REST Service to submit/stop/monitor data capture combo jobs"
  }, {
    "path" : "/datacapture.{format}",
    "description" : "REST Service to submit/stop/monitor data capture jobs"
  }, {
    "path" : "/datacapture_combo_schedule.{format}",
    "description" : "REST Service to submit/stop/monitor scheduled data capture combo jobs"
  }, {
    "path" : "/dataproviders.{format}",
    "description" : "REST Service to get supported data providers"
  }, {
    "path" : "/datacapture_schedule.{format}",
    "description" : "REST Service to submit/stop/monitor scheduled data capture jobs"
  }, {
    "path" : "/test.{format}",
    "description" : "REST Service to test that the services are running"
  } ],
  "basePath" : "/resources"
}</message>
</record>
<record>
  <date>2023-03-17T04:48:31.046379800Z</date>
  <millis>1679028511046</millis>
  <nanos>379800</nanos>
  <sequence>1</sequence>
  <logger>com.example.demo</logger>
  <level>SEVERE</level>
  <class>com.example.demo.MainPageTest</class>
  <method>ensureThatEndpointReturns200</method>
  <thread>1</thread>
  <message>Request Timed Out!</message>
</record>
<record>
  <date>2023-03-17T04:48:31.217410700Z</date>
  <millis>1679028511217</millis>
  <nanos>410700</nanos>
  <sequence>2</sequence>
  <logger>com.example.demo</logger>
  <level>INFO</level>
  <class>com.example.demo.MainPageTest</class>
  <method>ensureThatEndpointDataCaptureReturns200</method>
  <thread>1</thread>
  <message>Request Successful!
Request body: ["HDM","FPG","UNIMAN","MUP","TMU","HEALTHENTIA"]</message>
</record>
</log>
<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE log SYSTEM "logger.dtd">
<log>
<record>
  <date>2023-03-17T04:56:01.205730700Z</date>
  <millis>1679028961205</millis>
  <nanos>730700</nanos>
  <sequence>0</sequence>
  <logger>com.example.demo</logger>
  <level>INFO</level>
  <class>com.example.demo.MainPageTest</class>
  <method>ensureThatEndpoint2Returns200</method>
  <thread>1</thread>
  <message>Request Successful!
Request body: {
  "apiVersion" : "0.0.1-SNAPSHOT",
  "swaggerVersion" : "1.2",
  "apis" : [ {
    "path" : "/datacapture_combo.{format}",
    "description" : "REST Service to submit/stop/monitor data capture combo jobs"
  }, {
    "path" : "/datacapture.{format}",
    "description" : "REST Service to submit/stop/monitor data capture jobs"
  }, {
    "path" : "/datacapture_combo_schedule.{format}",
    "description" : "REST Service to submit/stop/monitor scheduled data capture combo jobs"
  }, {
    "path" : "/dataproviders.{format}",
    "description" : "REST Service to get supported data providers"
  }, {
    "path" : "/datacapture_schedule.{format}",
    "description" : "REST Service to submit/stop/monitor scheduled data capture jobs"
  }, {
    "path" : "/test.{format}",
    "description" : "REST Service to test that the services are running"
  } ],
  "basePath" : "/resources"
}</message>
</record>
<record>
  <date>2023-03-17T04:56:11.330985300Z</date>
  <millis>1679028971330</millis>
  <nanos>985300</nanos>
  <sequence>1</sequence>
  <logger>com.example.demo</logger>
  <level>SEVERE</level>
  <class>com.example.demo.MainPageTest</class>
  <method>ensureThatEndpointReturns200</method>
  <thread>1</thread>
  <message>Request Timed Out!</message>
</record>
<record>
  <date>2023-03-17T04:56:11.510018600Z</date>
  <millis>1679028971510</millis>
  <nanos>18600</nanos>
  <sequence>2</sequence>
  <logger>com.example.demo</logger>
  <level>INFO</level>
  <class>com.example.demo.MainPageTest</class>
  <method>ensureThatEndpointDataCaptureReturns200</method>
  <thread>1</thread>
  <message>Request Successful!
Request body: ["HDM","FPG","UNIMAN","MUP","TMU","HEALTHENTIA"]</message>
</record>
</log>
